(()=>{var e={657:(e,r,o)=>{"use strict";const s=`${o(597).dotenv}.production`;o(142).config({path:s})},597:(e,r,o)=>{const s=o(147),{resolve:t}=o(17),n=o(17),c=s.realpathSync(process.cwd()),i=e=>n.resolve(c,e);e.exports={dotenv:i(".env"),appPath:i("."),appBuild:i("build"),appEntry:i("src/server.ts"),appSrc:i("src")}},142:e=>{"use strict";e.exports=require("dotenv")},147:e=>{"use strict";e.exports=require("fs")},37:e=>{"use strict";e.exports=require("os")},17:e=>{"use strict";e.exports=require("path")}},r={};function o(s){var t=r[s];if(void 0!==t)return t.exports;var n=r[s]={exports:{}};return e[s](n,n.exports,o),n.exports}o.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return o.d(r,{a:r}),r},o.d=(e,r)=>{for(var s in r)o.o(r,s)&&!o.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:r[s]})},o.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{"use strict";o(657);const e=require("cluster");var r=o.n(e);const s=require("express");var t=o.n(s);const n=require("compression");var c=o.n(n);const i=require("cors");var u=o.n(i);const p={rejectUnauthorized:!1},d=new(require("pg").Pool)({connectionString:process.env.PG_CONNECTION,ssl:p});d.on("error",(e=>{console.error("Unexpected error on idle client",e),process.exit(-1)}));const a={query:function(e,r,o){!r&&o?d.query(e,o):d.query(e,r,o)}},l=(e,r)=>{a.query("SELECT * FROM products",[],((e,o)=>{e&&(console.error(e),r.status(400).json({error:e})),r.json(o.rows)}))},v=(e,r)=>{a.query("SELECT * FROM PRODUCTS WHERE id = $1",[e.params.id],((e,o)=>{if(e)throw e;r.json(o.rows)}))},x=t().Router().get("/products",l).get("/products/:id",v),q=t()(),E=process.env.PORT||4e3;process.env.APP_NAME&&(process.title=process.env.APP_NAME),q.disable("x-powered-by"),q.use(c()()),q.use(u()()),q.use(t().json()),q.use(t().urlencoded({extended:!1})),q.use("/api",x),process.on("uncaughtException",(e=>{console.error(`uncaught error\n${e.stack}`),console.error("Killing node..."),process.exit(1)})),r().isPrimary?q.listen(E,(()=>{console.log(`Server started in ${q.get("env")} mode on port ${E}`)})):(o(37).cpus().forEach((()=>r().fork())),r().on("disconnect",(e=>{console.log("CLUSTER: Worker %d disconnected from the cluster.",e.id)})),r().on("exit",((e,o,s)=>{console.log("CLUSTER: Worker %d died with exit code %d (%s)",e.id,o,s),r().fork()})))})()})();